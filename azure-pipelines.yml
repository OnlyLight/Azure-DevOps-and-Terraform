# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

# trigger target branch
pr:
  branches:
    include:
    - master
    - develop

resources:
- repo: self

variables:
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]

stages:
# - stage: Build
#   displayName: Build image
#   jobs:
#   - job: Build
#     displayName: Build
#     pool:
#       vmImage: $(vmImageName)
#     steps:
#     - task: AzureKeyVault@2
#       inputs:
#         azureSubscription: 'Azure DevOps'
#         KeyVaultName: 'kvault-demo-12'
#         SecretsFilter: '*'
#         RunAsPreJob: false
#     - task: Docker@2
#       inputs:
#         containerRegistry: 'Onlylight Docker Hub'
#         repository: $(imageRepository)
#         command: 'buildAndPush'
#         Dockerfile: '**/Dockerfile'
#         tags: |
#           $(tag)
#           latest
- stage: Deploy
  displayName: Deploy to slot
  jobs:
  - job: Deploy
    displayName: Deploy job
    steps:
    # - task: AzureRmWebAppDeployment@4
    #   condition: succeeded()
    #   inputs:
    #     ConnectionType: 'AzureRM'
    #     azureSubscription: 'Azure DevOps'
    #     appType: 'webAppContainer'
    #     WebAppName: 'blazordemo123'
    #     DockerNamespace: 'registry-1.docker.io'
    #     DockerRepository: '$(imageRepository)'
    #     DockerImageTag: '$(tag)'
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: |
          $baseUrl = "https://dev.azure.com/duyquang130/Terraform%20Test/_apis/git/repositories/Terraform%20Test/commits"
          $request = "$baseUrl/$env:RELEASE_ARTIFACTS_Terraform%20Test_SOURCEVERSION"
          Write-Host "Request: $request"
          
          $response = Invoke-WebRequest -Uri $baseUrl
          $json = ($response)
          $comment = $json.comment
          Write-Host "Response: $comment"
          
          Write-Host "##vso[task.setvariable variable=commitComment;]$comment"
    - task: SendGridEmail@2
      condition: and(succeeded(), eq(variables.isMain, 'false'))
      inputs:
        SendGridApiKey: '$(SendGridKey)'
        FromAddress: 'Duy Tran <duyquang130@gmail.com>'
        ToAddresses: 'Duy Tran <duyquangtran@kms-technology.com>, Duy Tran <duyquang130@gmail.com>'
        Subject: '$(Build.DefinitionName) Finished Successfully'
        emailBodyFormat: 'InLine'
        EmailBody: '$(Build.SourceBranch)<h4>SourceBranch $(System.PullRequest.SourceBranch)</h4><h4>TargetBranch $(System.PullRequest.TargetBranch)</h4><h4>SourceVersionMessage $(commitComment)</h4>'
        sendAsHtml: true