# Docker
# Build a Docker image
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  batch: true
  branches:
    include: 
    - master
  paths:
    exclude:
    - README.md

# pr:
#   branches:
#     include:
#     - master
#     - feature/*
#   paths:
#     exclude:
#     - README.md

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'
  imageRepository: 'onlylight291998/docker_dotnet'
  vmImageName: 'ubuntu-latest'
  keySendGrid: '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'

stages:
# - stage: Build
#   displayName: Build image
#   jobs:
#   - job: Build
#     displayName: Build
#     pool:
#       vmImage: $(vmImageName)
#     steps:
#     - task: AzureKeyVault@2
#       inputs:
#         azureSubscription: 'Azure DevOps'
#         KeyVaultName: 'kvault-demo-12'
#         SecretsFilter: '*'
#         RunAsPreJob: false
#     - task: Docker@2
#       inputs:
#         containerRegistry: 'Onlylight Docker Hub'
#         repository: $(imageRepository)
#         command: 'buildAndPush'
#         Dockerfile: '**/Dockerfile'
#         tags: |
#           $(tag)
#           latest

- stage: Deploy
  displayName: Deploy to slot
  jobs:
  - job: Deploy
    displayName: Deploy job
    pool:
      vmImage: $(vmImageName)
    steps:
    # - task: AzureRmWebAppDeployment@4
    #   inputs:
    #     ConnectionType: 'AzureRM'
    #     azureSubscription: 'Azure DevOps'
    #     appType: 'webAppContainer'
    #     WebAppName: 'blazordemo123'
    #     DockerNamespace: 'registry-1.docker.io'
    #     DockerRepository: '$(imageRepository)'
    #     DockerImageTag: '$(tag)'
    - task: SendGridEmail@2
      inputs:
        SendGridApiKey: '$(keySendGrid)'
        FromAddress: 'duyquangtran@kms-technology.com'
        ToAddresses: 'duyquang130@gmail.com'
        Subject: 'Deploy'
        emailBodyFormat: 'InLine'
        EmailBody: 'Deploy Success !!'